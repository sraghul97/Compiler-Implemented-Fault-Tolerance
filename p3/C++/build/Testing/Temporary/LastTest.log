Start testing: Apr 19 20:44 UTC
----------------------------------------------------------
1/1 Testing: Usage
1/1 Test: Usage
Command: "/ece566/projects/p3/C++/build/p3" "-h"
Directory: /ece566/projects/p3/C++/build
"Usage" start time: Apr 19 20:44 UTC
Output:
----------------------------------------------------------
OVERVIEW: llvm system compiler

USAGE: p3 [options] <input bitcode> <output bitcode>

OPTIONS:

Color Options:

  --color                                            - Use colors in output (default=autodetect)

General options:

  --abort-on-max-devirt-iterations-reached           - Abort when the max iterations for devirtualization CGSCC repeat pass is reached
  --atomic-counter-update-promoted                   - Do counter update using atomic fetch add  for promoted counters only
  --atomic-first-counter                             - Use atomic fetch add for first counter in a function (usually the entry counter)
  --bonus                                            - Run the bonus code.
  --bounds-checking-single-trap                      - Use one trap block per function
  --cfg-hide-cold-paths=<number>                     - Hide blocks with relative frequency below the given value
  --cfg-hide-deoptimize-paths                        - 
  --cfg-hide-unreachable-paths                       - 
  --cost-kind=<value>                                - Target cost kind
    =throughput                                      -   Reciprocal throughput
    =latency                                         -   Instruction latency
    =code-size                                       -   Code size
    =size-latency                                    -   Code size and latency
  --debug-info-correlate                             - Use debug info to correlate profiles.
  --debugify-func-limit=<ulong>                      - Set max number of processed functions per pass.
  --debugify-level=<value>                           - Kind of debug info to add
    =locations                                       -   Locations only
    =location+variables                              -   Locations and Variables
  --debugify-quiet                                   - Suppress verbose debugify output
  --disable-auto-upgrade-debug-info                  - Disable autoupgrade of debug info
  --disable-i2p-p2i-opt                              - Disables inttoptr/ptrtoint roundtrip optimization
  --do-counter-promotion                             - Do counter register promotion
  --dot-cfg-mssa=<file name for generated dot file>  - file name for generated dot file
  --enable-gvn-hoist                                 - Enable the GVN hoisting pass (default = off)
  --enable-gvn-memdep                                - 
  --enable-gvn-sink                                  - Enable the GVN sinking pass (default = off)
  --enable-load-in-loop-pre                          - 
  --enable-load-pre                                  - 
  --enable-loop-simplifycfg-term-folding             - 
  --enable-name-compression                          - Enable name/filename string compression
  --enable-split-backedge-in-load-pre                - 
  --experimental-debug-variable-locations            - Use experimental new value-tracking variable locations
  --force-tail-folding-style=<value>                 - Force the tail folding style
    =none                                            -   Disable tail folding
    =data                                            -   Create lane mask for data only, using active.lane.mask intrinsic
    =data-without-lane-mask                          -   Create lane mask with compare/stepvector
    =data-and-control                                -   Create lane mask using active.lane.mask intrinsic, and use it for both data and control flow
    =data-and-control-without-rt-check               -   Similar to data-and-control, but remove the runtime check
  --fs-profile-debug-bw-threshold=<uint>             - Only show debug message if the source branch weight is greater  than this value.
  --fs-profile-debug-prob-diff-threshold=<uint>      - Only show debug message if the branch probility is greater than this value (in percentage).
  --generate-merged-base-profiles                    - When generating nested context-sensitive profiles, always generate extra base profile for function with all its context profiles merged into it.
  --hash-based-counter-split                         - Rename counter variable of a comdat function based on cfg hash
  --hot-cold-split                                   - Enable hot-cold splitting pass
  --import-all-index                                 - Import all external functions in index.
  --instcombine-code-sinking                         - Enable code sinking
  --instcombine-guard-widening-window=<uint>         - How wide an instruction window to bypass looking for another guard
  --instcombine-max-num-phis=<uint>                  - Maximum number phis to handle in intptr/ptrint folding
  --instcombine-max-sink-users=<uint>                - Maximum number of undroppable users for instruction sinking
  --instcombine-maxarray-size=<uint>                 - Maximum array size considered when doing a combine
  --instcombine-negator-enabled                      - Should we attempt to sink negations?
  --instcombine-negator-max-depth=<uint>             - What is the maximal lookup depth when trying to check for viability of negation sinking.
  --instrprof-atomic-counter-update-all              - Make all profile counter updates atomic (for testing only)
  --internalize-public-api-file=<filename>           - A file containing list of symbol names to preserve
  --internalize-public-api-list=<list>               - A list of symbol names to preserve
  --iterative-counter-promotion                      - Allow counter promotion across the whole loop nest.
  --matrix-default-layout=<value>                    - Sets the default matrix layout
    =column-major                                    -   Use column-major layout
    =row-major                                       -   Use row-major layout
  --matrix-print-after-transpose-opt                 - 
  --max-counter-promotions=<int>                     - Max number of allowed counter promotions
  --max-counter-promotions-per-loop=<uint>           - Max number counter promotions per loop to avoid increasing register pressure too much
  --mir-strip-debugify-only                          - Should mir-strip-debug only strip debug info from debugified modules by default
  --misexpect-tolerance=<uint>                       - Prevents emiting diagnostics when profile counts are within N% of the threshold..
  --no                                               - Do not check for valid IR.
  --no-control-protection                            - Do not perform control flow protection.
  --no-discriminators                                - Disable generation of discriminator information.
  --no-replicate                                     - Do not perform code replication.
  --no-swft                                          - Do not perform SWFT.
  --pgo-block-coverage                               - Use this option to enable basic block coverage instrumentation
  --pgo-temporal-instrumentation                     - Use this option to enable temporal instrumentation
  --pgo-view-block-coverage-graph                    - Create a dot file of CFGs with block coverage inference information
  --poison-checking-function-local                   - Check that returns are non-poison (for testing)
  --print-pipeline-passes                            - Print a '-passes' compatible string describing the pipeline (best-effort only).
  --runtime-counter-relocation                       - Enable relocating counters at runtime.
  --safepoint-ir-verifier-print-only                 - 
  --sample-profile-check-record-coverage=<N>         - Emit a warning if less than N% of records in the input profile are matched to the IR.
  --sample-profile-check-sample-coverage=<N>         - Emit a warning if less than N% of samples in the input profile are matched to the IR.
  --sample-profile-max-propagate-iterations=<uint>   - Maximum number of iterations to go through when propagating sample block/edge weights through the CFG.
  --skip-ret-exit-block                              - Suppress counter promotion if exit blocks contain ret.
  --speculative-counter-promotion-max-exiting=<uint> - The max number of exiting blocks of a loop to allow  speculative counter promotion
  --speculative-counter-promotion-to-loop            - When the option is false, if the target block is in a loop, the promotion will be disallowed unless the promoted counter  update can be further/iteratively promoted into an acyclic  region.
  --summary-file=<string>                            - The summary file to use for function importing.
  --type-based-intrinsic-cost                        - Calculate intrinsics cost based only on argument types
  --verbose                                          - Verbose stats.
  --verify-region-info                               - Verify region info (time consuming)
  --vp-counters-per-site=<number>                    - The average number of profile counters allocated per value profiling site.
  --vp-static-alloc                                  - Do static counter allocation for value profiler

Generic Options:

  --help                                             - Display available options (--help-hidden for more)
  --help-list                                        - Display list of available options (--help-list-hidden for more)
  --version                                          - Display the version of this program
<end of output>
Test time =   0.90 sec
----------------------------------------------------------
Test Pass Reason:
Required regular expression found. Regex=[USAGE:]
"Usage" end time: Apr 19 20:44 UTC
"Usage" time elapsed: 00:00:00
----------------------------------------------------------

End testing: Apr 19 20:44 UTC
